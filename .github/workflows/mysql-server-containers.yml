name: "MySQL Server 🐳 Mirror"

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches:
      - '*'
    paths:
      - containers.yml
      - '.github/workflows/mysql-server-containers.yml'
      - 'mirrors/mysql-server/*'
  pull_request:
    paths:
      - containers.yml
      - '.github/workflows/mysql-server-containers.yml'
      - 'mirrors/mysql-server/*'

env:
  PATH_IN_REPO: mirrors/mysql-server

jobs:
  matrix-generator:
    name: "Mirror Matrix Generator"
    runs-on: ubuntu-latest
    outputs:
      dockerinfo: ${{ steps.set-matrix.outputs.dockerinfo }}
    steps:
      - name: "Fetching Repository Contents"
        uses: actions3checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Requirements
        run: |
          python -m pip install -r requirements.txt

      - name: "Generate Matrix Data"
        id: set-matrix
        run: |
          inv containers.matrix --from-workflow ${{ env.PATH_IN_REPO }}

  mirror-image:
    runs-on: ubuntu-latest
    needs: matrix-generator
    name: "${{ matrix.dockerinfo.name }}"
    strategy:
      fail-fast: false
      max-parallel: 20
      matrix:
        dockerinfo: ${{ fromJson(needs.matrix-generator.outputs.dockerinfo) }}

    permissions:
      actions: read
      checks: write
      issues: read
      packages: write
      pull-requests: read
      repository-projects: read
      statuses: read

    steps:
      - name: "Fetching Repository Contents"
        uses: actions/checkout@v3

      - name: "Throttle concurrent pushes"
        run: |
          t=$(shuf -i 5-30 -n 1); echo "Sleeping $t seconds"; sleep $t

      - name: "Setup DockerFile"
        run: |
          echo " " >> ./${{matrix.dockerinfo.file}}
          echo "LABEL org.opencontainers.image.source=\"https://github.com/${GITHUB_REPOSITORY}/\"" >> ${{matrix.dockerinfo.file}}
          echo "LABEL org.opencontainers.image.url=\"https://github.com/${GITHUB_REPOSITORY}/\"" >> ${{matrix.dockerinfo.file}}
          echo "LABEL org.opencontainers.image.documentation=\"https://github.com/${GITHUB_REPOSITORY}/\"" >> ${{matrix.dockerinfo.file}}
          echo "LABEL org.opencontainers.image.vendor=\"Unofficial Docker Hub Mirror\"" >> ${{matrix.dockerinfo.file}}
          cat ./${{matrix.dockerinfo.file}}

      - name: "Docker QEMU"
        uses: docker/setup-qemu-action@v2

      - name: "Docker BuildX"
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: "Log into GitHub Container Registry"
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Build & Publish"
        uses: docker/build-push-action@v3
        with:
          file: ${{ matrix.dockerinfo.file }}
          context: ${{ env.PATH_IN_REPO }}
          push: ${{ github.repository == 'saltstack/salt-ci-containers' && github.event_name == 'push' }}
          tags: |
            ghcr.io/${{ github.repository }}/${{ matrix.dockerinfo.name }}
